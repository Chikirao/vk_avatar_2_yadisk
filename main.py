import requests
import configparser as cf # –î–ª—è –ø–∞—Ä—Å–∞ –∫–æ–Ω—Ñ–∏–≥–∞
import os, json, shutil, sys
from pprint import pprint
from progress.bar import IncrementalBar
from ya_metods import * # –¢–∞–º –∫–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏—Å–∫–æ–º

config = cf.ConfigParser()
config.read("config.ini")
disk_token = config.get('TOKEN','disk_token') # –¢–æ–∫–µ–Ω –¥–∏—Å–∫–∞
serv_key = config.get('TOKEN','serv_key') # –°–µ—Ä–≤–∏—Å–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ ü§ñ

# –ü—Ä–æ–≤–µ—Ä–∏–º –≤–≤–µ–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ñ–∏–≥–µ
if disk_token == 'your token':
    print('–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–æ–∫–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥!')
    sys.exit()
elif serv_key == 'your key':
    print('–í—ã –Ω–µ –≤–≤–µ–ª–∏ –∫–ª—é—á –≤ –∫–æ–Ω—Ñ–∏–≥!')
    sys.exit()

own_id = input('–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ: |')

# –û—á–∏—Å—Ç–∏–º –ø–∞–ø–∫—É
try:
    os.makedirs('saved_pictures/piks_out')
except FileExistsError:
    print('')
shutil.rmtree('saved_pictures/piks_out')
os.makedirs('saved_pictures/piks_out')

bar = IncrementalBar('–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å –í–ö:', max = 6) 

bar.next()
URL = 'https://api.vk.com/method/photos.get' 
params = {
    'access_token': serv_key,
    'owner_id':own_id,
    'album_id':'profile',
    'v':'5.131',
    'extended':'1'
}

bar.next()

res = requests.get(URL, params=params) # –ü—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å üöÄ

bar.next()

with open('pics.json', 'w', encoding='utf-8') as json_file:
    json_file.write(json.dumps(res.json(), indent=2, ensure_ascii=False))

bar.next()

# –ó–∞–ø–∏—à–µ–º –Ω–æ–≤—ã–π json —Å –ø–æ–ª—É—á–µ–Ω—ã–º–∏ —Ñ–æ—Ç–æ
new_json = {}
for photo in res.json()["response"]["items"]:
    for size in photo.get("sizes"):
        if size.get("type") == "z":
            new_json[f'{photo.get("likes").get("count")}_{photo.get("date")}'] = size.get("url")

# –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ç–æ
if len(new_json) == 0:
    print('\n–ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø—Ä–æ—Ñ–∏–ª—è!')
    sys.exit()

bar.next()

json_save = []
for image in new_json:
    img_dict = {}
    img_dict["file_name"] = f'{image}.jpg'
    img_dict["size"] = 'z'
    json_save.append(img_dict)

with open('saved_pictures/saved_pics.json', 'w', encoding='utf-8') as json_file:
    json_file.write(json.dumps(json_save, indent=2, ensure_ascii=False))

bar.next()
bar.finish()

# –ü–æ–ª–µ—Ç–µ–ª–∏ –Ω–∞ –¥–∏—Å–∫

bar = IncrementalBar('–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –¥–∏—Å–∫:', max = 3 + len(new_json)*2)
ya = YandexDisk(disk_token)
ya.create_folder('VK photos') # —Å–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏

bar.next()

for image in new_json: # –°–∫–∞—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    img_data = requests.get(new_json.get(image)).content
    with open(f'saved_pictures/piks_out/{image}.jpg', 'wb') as handler:
        handler.write(img_data)
    bar.next()

bar.next()

for image in new_json: # –û—Ç–ø—Ä–∞–≤–∏–º –Ω–∞ –¥–∏—Å–∫ üëæ
    try:
        ya.upload_photo(f'VK photos/{image}', f'saved_pictures/piks_out/{image}.jpg')
        bar.next()
    except requests.exceptions.HTTPError:
        print('\n–§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! –í–æ–∑–º–æ–∂–Ω–æ –æ–Ω–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É', new_json.get(image))
        bar.next()
        continue
bar.next()
bar.finish()

print('\n–ó–∞–≥—Ä—É–∑–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')