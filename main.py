import requests
import configparser as cf # –î–ª—è –ø–∞—Ä—Å–∞ –∫–æ–Ω—Ñ–∏–≥–∞
import os, json, shutil, sys
from pprint import pprint
from progress.bar import IncrementalBar
from metods.ya_metods import * # –¢–∞–º –∫–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏—Å–∫–æ–º
from metods.vk_metods import * # –¢–∞–º –∫–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–∫

config = cf.ConfigParser()
config.read("config.ini")
serv_key = config.get('TOKEN','serv_key') # –°–µ—Ä–≤–∏—Å–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ ü§ñ

if serv_key == 'your key':
    print('–í—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∫–ª—é—á –í–ö –ê–ü–ò –≤ —Ñ–∞–π–ª config.ini!')

from_album = input('–ò–∑ –∫–∞–∫–æ–≥–æ –∞–ª—å–±–æ–º–∞ –±—É–¥–µ–º –ø–æ–ª—É—á–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?(wall - —Ñ–æ—Ç–æ —Å–æ —Å—Ç–µ–Ω—ã, profile - –∞–≤–∞—Ç–∞—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è, a - –æ—Ç–¥–µ–ª—å–Ω–æ–µ id —Ñ–ª—å–±–æ–º–∞.)\n–ù–∞–ø–∏—à–∏—Ç–µ w/p/a :|')
if from_album not in ['w', 'p', 'a', 'W', 'P', 'A']:
    print('–ù–µ –≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!')
    sys.exit()
disk_token = input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –æ—Ç –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫–∞: |')
own_id = input('–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ: |')
fold_name = input('–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–π –ø–∞–ø–∫–∏ –Ω–∞ –¥–∏—Å–∫–µ: |')

# –û—á–∏—Å—Ç–∏–º –ø–∞–ø–∫—É
try: os.makedirs('saved_pictures/piks_out')
except FileExistsError: print('')
shutil.rmtree('saved_pictures/piks_out')
os.makedirs('saved_pictures/piks_out')

bar = IncrementalBar('–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å –í–ö:', max = 5) 

bar.next()

res = VKontakte() # –ü—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å üöÄ
alb_cheker = VKontakte()

if from_album == ('p' or 'P'):
    from_what = 'profile'
    res = res.downlphoto(serv_key, own_id, from_what)
elif from_album == ('w' or 'W'):
    from_what = 'wall'
    res = res.downlphoto(serv_key, own_id, from_what)
elif from_album == ('a' or 'A'):
    res = res.getalbums(serv_key, own_id)
    print(f"\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∞–ª—å–±–æ–º: ")
    for i in res.json()['response']['items']:
        print(f"\n–ù–æ–º–µ—Ä –∞–ª—å–±–æ–º–∞: {i['id']}\n–ù–∞–∑–≤–∞–Ω–∏–µ –∞–ª—å–±–æ–º–∞: {i['title']}")
    album_id = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω—É–∂–Ω–æ–≥–æ –∞–ª—å–±–æ–º–∞: |")
    from_what = album_id
    res = alb_cheker.downlphoto(serv_key, own_id, from_what)

if 'error' in res.json():
    print('\n\n–û—à–∏–±–∫–∞!\n')
    if res.json()['error']['error_code'] == 100:
        print('–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω!')
        sys.exit()
    elif res.json()['error']['error_code'] == 300:
        print('–ê–ª—å–±–æ–º –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω! –ü–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ª–∏—à–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã –∏–∑ –∞–ª—å–±–æ–º–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –∞–ª—å–±–æ–º.')
    elif res.json()['error']['error_code'] == 30:
        print('–ü—Ä–æ—Ñ–∏–ª—å —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–º!')
    elif res.json()['error']['error_code'] == 29:
        print('–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–∞ :(\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.')
    elif res.json()['error']['error_code'] == 18:
        print('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.')
    elif res.json()['error']['error_code'] == 10:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!')
    elif res.json()['error']['error_code'] == 6:
        print('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–π –≤ —Å–µ–∫—É–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!')

bar.next()

with open('pics.json', 'w', encoding='utf-8') as json_file:
    json_file.write(json.dumps(res.json(), indent=2, ensure_ascii=False))

bar.next()

# –ó–∞–ø–∏—à–µ–º –Ω–æ–≤—ã–π json —Å –ø–æ–ª—É—á–µ–Ω—ã–º–∏ —Ñ–æ—Ç–æ
new_json = {}
for photo in res.json()["response"]["items"]:
    for size in photo.get("sizes"):
        if size.get("type") == "z":
            new_json[f'{photo.get("likes").get("count")}_{photo.get("date")}'] = size.get("url")

# –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ç–æ
if len(new_json) == 0:
    print('\n–ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø—Ä–æ—Ñ–∏–ª—è!')
    sys.exit()

bar.next()

json_save = []
for image in new_json:
    img_dict = {}
    img_dict["file_name"] = f'{image}.jpg'
    img_dict["size"] = 'z'
    json_save.append(img_dict)

with open('saved_pictures/saved_pics.json', 'w', encoding='utf-8') as json_file:
    json_file.write(json.dumps(json_save, indent=2, ensure_ascii=False))

bar.next()
bar.finish()

# –ü–æ–ª–µ—Ç–µ–ª–∏ –Ω–∞ –¥–∏—Å–∫ üíΩ

bar = IncrementalBar('–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –¥–∏—Å–∫:', max = 2 + len(new_json)*2)
ya = YandexDisk(disk_token)
ya.create_folder(fold_name) # —Å–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ üìÇ

bar.next()

for image in new_json: # –°–∫–∞—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    img_data = requests.get(new_json.get(image)).content
    with open(f'saved_pictures/piks_out/{image}.jpg', 'wb') as handler:
        handler.write(img_data)
    bar.next()

bar.next()

for image in new_json: # –û—Ç–ø—Ä–∞–≤–∏–º –Ω–∞ –¥–∏—Å–∫ üëæ
    try:
        ya.upload_photo(f'{fold_name}/{image}', f'saved_pictures/piks_out/{image}.jpg')
        bar.next()
    except requests.exceptions.HTTPError:
        print('\n–§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! –í–æ–∑–º–æ–∂–Ω–æ –æ–Ω–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É', new_json.get(image))
        bar.next()
        continue

bar.next()
bar.finish()

print('\n–ó–∞–≥—Ä—É–∑–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')